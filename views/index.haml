#map
:javascript
  var map = new OpenLayers.Map("map", {}),
  osm = new OpenLayers.Layer.OSM("OSM"),
  places;
  map.addLayer(osm);	
  map.setBaseLayer(osm);
  var displayTimeline = function(times) {
    var i = 0, length = times.length, place, point, points, feature,
    layer = new OpenLayers.Layer.Vector();
    for (; i < length; i++) {
      place = places[times[i].places];
      times[i].places = place;
      if (!place || 0 == place.length) {
        feature = new OpenLayers.Feature();
        feature.data = times[i];
        layer.addFeatures([feature]);
      } else {
        points = [];
        point = new OpenLayers.LonLat(place.latitude, place.longitude).transform(
          new OpenLayers.Projection("EPSG:4326"),
          map.getProjectionObject()
        );
        point = new OpenLayers.Geometry.Point(point.lon, point.lat);
        points.push(point);
        feature = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPoint(points));
        feature.data = times[i];
        layer.addFeatures([feature]);
      }
    };
    var ele,
    animation = new OpenLayers.Control.Animation(layer, {
      delay: 500,
      onShow: function(feature) {
        if (ele) {
          ele.setAttribute("style", "");
        }
        ele = document.getElementById("minute-" + feature.data.time);
        ele.setAttribute("style", "background-color:red;");
      },
      loop: true
    });
    map.addControl(animation);
    map.addLayers([layer]);
    map.zoomTo(2);
    //animation.activate();
  };
  new OpenLayers.Request.GET({
    url: "../places.json",
    success: function(response) {
      places = JSON.parse(response.responseText);
      new OpenLayers.Request.GET({
        url: "./timeline",
        success: function(response) {
          displayTimeline(JSON.parse(response.responseText));
        }
      });
    }
  });

- index = 0
- @timeline.each do |scene|
  - if scene.time.to_i > (index * 60)
    .timeline
    - index = index + 1
  - time = scene.time
  - timeposition = scene.time
  - people = scene.people
  - places = scene.places
  %div{:id => "minute-#{time}", :class => 'minute-box'}
    %div.time=time
    %div.place=places.join(", ")
    %ul.cast-list
      - if people.any?
        - people.each do |person|
          %li=person
