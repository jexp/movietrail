#map
:javascript
  var map = new OpenLayers.Map("map", {controls:[]}),
  osm = new OpenLayers.Layer.OSM("OSM"),
  places;
  map.addLayer(osm);	
  map.setBaseLayer(osm);
  var displayTimeline = function(times) {
    var i = 0, length = times.length, place, point, feature,
    layer = new OpenLayers.Layer.Vector();
    for (; i < length; i++) {
      place = places[times[i].place];
      if (!place) {
        feature = new OpenLayers.Feature();
        feature.data = times[i];
        layer.addFeatures([feature]);
      } else {
        place = new OpenLayers.LonLat(place.longitude, place.latitude).transform(
          new OpenLayers.Projection("EPSG:4326"),
          map.getProjectionObject()
        );
        point = new OpenLayers.Geometry.Point(place.lon, place.lat);
        feature = new OpenLayers.Feature.Vector(point);
        feature.data = times[i];
        layer.addFeatures([feature]);
      }
    }
    var animation = new OpenLayers.Control.Animation(layer, {
      delay: 100,
      onShow: function(feature) {
        console.log(feature.data.time);
      }
    });
    map.addControl(animation);
    map.addLayers([layer]);
    map.zoomToExtent(layer.getDataExtent());
    animation.activate();
  };
  new OpenLayers.Request.GET({
    url: "../places.json",
    success: function(response) {
      places = JSON.parse(response.responseText);
      new OpenLayers.Request.GET({
        url: "./timeline",
        success: function(response) {
          displayTimeline(JSON.parse(response.responseText));
        }
      });
    }
  });

